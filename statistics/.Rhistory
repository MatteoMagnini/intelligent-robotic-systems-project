main = "Difference between Q learning and handcrafted ptoa",
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances(distances_Q, distances_classic)
compare_distances <- function(table_Q, table_classic){
distances_Q <- table_Q$V1
distances_classic <- table_classic$V1
boxplot(distances_Q,distances_classic,
main = "Difference between Q learning and handcrafted ptoa",
ylab = "Distance from light source",
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances(distances_Q, distances_classic)
compare_distances <- function(table_Q, table_classic){
distances_Q <- table_Q$V1
distances_classic <- table_classic$V1
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "Difference between Q learning and handcrafted ptoa",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances(distances_Q, distances_classic)
compare_distances <- function(table_Q, table_classic){
distances_Q <- table_Q$V1
distances_classic <- table_classic$V1
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA comparison: Q learning and handcrafted",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances(distances_Q, distances_classic)
compare_distances <- function(table_Q, table_classic){
distances_Q <- table_Q$V1
distances_classic <- table_classic$V1
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances(distances_Q, distances_classic)
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
compare_distances <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
plot(seq(1,length(distances_Q)),sort(distances_Q),type="l",col="red")
lines(seq(1,length(distances_classic)),sort(distances_classic),y2,col="green")
}
plot_distances(distances_Q,distances_classic)
compare_distances <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
plot(seq(1,length(distances_Q)),sort(distances_Q),type="l",col="blue")
par(new=TRUE)
lines(seq(1,length(distances_classic)),sort(distances_classic),y2,col="green")
}
plot_distances(distances_Q,distances_classic)
compare_distances <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue")
par(new=TRUE)
plot(seq(1,length(distances_classic)),sort(distances_classic),col="green")
}
plot_distances(distances_Q,distances_classic)
compare_distances <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
plot(seq(1,length(distances_Q)),sort(distances_Q), type="l",col="blue")
lines(seq(1,length(distances_classic)),sort(distances_classic),col="green")
}
plot_distances(distances_Q,distances_classic)
plot(seq(1,length(distances_Q)),sort(distances_Q), type="l",col="blue")
lines(seq(1,length(distances_classic)),sort(distances_classic),col="green")
plot(seq(1,length(distances_Q)),sort(distances_Q), type="l",col="blue",lwd = 2)
lines(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2)
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend(1, 95, legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
legend(1, 95, legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
legend(legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
legend(100, 95, legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
# set work directory
# setwd("~/")
# setwd("C:/Users/Matteo/Desktop/Personale/UniversitÃ /Magistrale/SIR/Progetto/statistics")
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(
) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
# set work directory
# setwd("~/")
# setwd("C:/Users/Matteo/Desktop/Personale/UniversitÃ /Magistrale/SIR/Progetto/statistics")
filename_Q <- "ptoa-Q2"
filename_classic <- "ptoa-classic2"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(
) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
# set work directory
# setwd("~/")
# setwd("C:/Users/Matteo/Desktop/Personale/UniversitÃ /Magistrale/SIR/Progetto/statistics")
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic2"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(
) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
# set work directory
# setwd("~/")
# setwd("C:/Users/Matteo/Desktop/Personale/UniversitÃ /Magistrale/SIR/Progetto/statistics")
filename_Q <- "ptoa-Q3"
filename_classic <- "ptoa-classic3"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
filename_circuit = "circuit"
metric_circuit <- read.table(paste(filename_circuit,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_circuit)),sort(metric_circuit),col="blue",lwd = 2,
main = "Circuit Metric",
ylab = "On circuit states over all circui states",
xlab = paste(as.character(length(metric_circuit)),"experiments"))
filename_circuit = "circuit"
metric_circuit <- read.table(paste(filename_circuit,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_circuit)),sort(metric_circuit,decreasing = TRUE),col="blue",lwd = 2,
main = "Circuit Metric",
ylab = "On circuit states over all circui states",
xlab = paste(as.character(length(metric_circuit)),"experiments"))
boxplot(metric_circuit,
main = "Circuit Metric boxplot",
ylab = "On circuit states over all circui states",
xlab = paste(as.character(length(metric_circuit)),"experiments"),
col = "blue")
filename_oa = "obstacle-avoidance"
metric_oa <- read.table(paste(filename_oa,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_oa)),sort(metric_oa,decreasing = TRUE),col="blue",lwd = 2,
main = "Obstacle Avoidance Metric",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"))
boxplot(metric_oa,
main = "Circuit Metric boxplot",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"),
col = "blue")
filename_circuit = "circuit"
metric_circuit <- read.table(paste(filename_circuit,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_circuit)),sort(metric_circuit,decreasing = TRUE),col="blue",lwd = 2,
main = "Circuit Metric",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_circuit)),"experiments"))
boxplot(metric_circuit,
main = "Circuit Metric boxplot",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_circuit)),"experiments"),
col = "blue")
boxplot(metric_oa,
main = "Obstacle Avoidance boxplot",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"),
col = "blue")
boxplot(metric_oa,
main = "Obstacle Avoidance metric boxplot",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"),
col = "blue")
filename_pt = "phototaxis"
metric_pt <- read.table(paste(filename_pt,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_pt)),sort(metric_pt,decreasing = TRUE),col="blue",lwd = 2,
main = "Phototaxis Metric",
ylab = "Distance from light source ",
xlab = paste(as.character(length(metric_pt)),"experiments"))
boxplot(metric_pt,
main = "Phototaxis metric boxplot",
ylab = "Distance from light source",
xlab = paste(as.character(length(metric_pt)),"experiments"),
col = "blue")
plot(seq(1,length(metric_pt)),sort(metric_pt),col="blue",lwd = 2,
main = "Phototaxis Metric",
ylab = "Distance from light source ",
xlab = paste(as.character(length(metric_pt)),"experiments"))
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
# set work directory
# setwd("~/")
# setwd("C:/Users/Matteo/Desktop/Personale/UniversitÃ /Magistrale/SIR/Progetto/statistics")
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
###########################################################################################
filename_circuit = "circuit"
metric_circuit <- read.table(paste(filename_circuit,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_circuit)),sort(metric_circuit,decreasing = TRUE),col="blue",lwd = 2,
main = "Circuit Metric",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_circuit)),"experiments"))
boxplot(metric_circuit,
main = "Circuit Metric boxplot",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_circuit)),"experiments"),
col = "blue")
###########################################################################################
filename_oa = "obstacle-avoidance"
metric_oa <- read.table(paste(filename_oa,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_oa)),sort(metric_oa,decreasing = TRUE),col="blue",lwd = 2,
main = "Obstacle Avoidance Metric",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"))
boxplot(metric_oa,
main = "Obstacle Avoidance metric boxplot",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"),
col = "blue")
###########################################################################################
filename_pt = "phototaxis"
metric_pt <- read.table(paste(filename_pt,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_pt)),sort(metric_pt),col="blue",lwd = 2,
main = "Phototaxis Metric",
ylab = "Distance from light source ",
xlab = paste(as.character(length(metric_pt)),"experiments"))
boxplot(metric_pt,
main = "Phototaxis metric boxplot",
ylab = "Distance from light source",
xlab = paste(as.character(length(metric_pt)),"experiments"),
col = "blue")
# set work directory
# setwd("~/")
# setwd("C:/Users/Matteo/Desktop/Personale/UniversitÃ /Magistrale/SIR/Progetto/statistics")
filename_Q <- "ptoa-Q"
filename_classic <- "ptoa-classic"
file_format <- ".csv"
# for a given file containing the positions of the stopped robots calculate the score.
# score is defined as the ratio between the first largest cluster and the second one.
distances_Q <- read.table(paste(filename_Q,file_format, sep=""), sep = ',')$V1
distances_classic <- read.table(paste(filename_classic,file_format,sep=""), sep = ',')$V1
plot(seq(1,length(distances_Q)),sort(distances_Q),col="blue",lwd = 2,
main = "PTOA comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"))
points(seq(1,length(distances_classic)),sort(distances_classic),col="green",lwd = 2)
legend("topleft", legend=c("Q learning", "Handcrafted"),
col=c("blue", "green"), lty=1:2, cex=0.8)
compare_distances_boxPlot <- function(distances_Q, distances_classic){
# assuming length(distances_Q) == length(distances_classic)
boxplot(distances_Q,distances_classic,
main = "PTOA boxplot comparison",
ylab = "Distance from light source",
xlab = paste(as.character(length(distances_Q)),"experiments"),
names = c("Q learning", "Handcrafted"),
col = c("blue","green"))
}
compare_distances_boxPlot(distances_Q, distances_classic)
###########################################################################################
filename_circuit = "circuit"
metric_circuit <- read.table(paste(filename_circuit,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_circuit)),sort(metric_circuit,decreasing = TRUE),col="blue",lwd = 2,
main = "Circuit Metric",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_circuit)),"experiments"))
boxplot(metric_circuit,
main = "Circuit Metric boxplot",
ylab = "On circuit states over all states",
xlab = paste(as.character(length(metric_circuit)),"experiments"),
col = "blue")
###########################################################################################
filename_oa = "obstacle-avoidance"
metric_oa <- read.table(paste(filename_oa,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_oa)),sort(metric_oa,decreasing = TRUE),col="blue",lwd = 2,
main = "Obstacle Avoidance Metric",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"))
boxplot(metric_oa,
main = "Obstacle Avoidance metric boxplot",
ylab = "Free obstacle states over all states",
xlab = paste(as.character(length(metric_oa)),"experiments"),
col = "blue")
###########################################################################################
filename_pt = "phototaxis"
metric_pt <- read.table(paste(filename_pt,file_format, sep=""), sep = ',')$V1
plot(seq(1,length(metric_pt)),sort(metric_pt),col="blue",lwd = 2,
main = "Phototaxis Metric",
ylab = "Distance from light source ",
xlab = paste(as.character(length(metric_pt)),"experiments"))
boxplot(metric_pt,
main = "Phototaxis metric boxplot",
ylab = "Distance from light source",
xlab = paste(as.character(length(metric_pt)),"experiments"),
col = "blue")
